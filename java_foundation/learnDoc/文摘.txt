成为高级程序员的 10 个步骤
What
▶软件工程师的职业生涯要历经以下几个阶段：初级、中级，最后才是高级。这篇文章主要是讲如何通过 10 个步骤助你成为一名高级软件工程师。

Why
得到更多的报酬！因为你的薪水会随着你水平的提高而增加
提升你的职业生涯。成为了高级软件工程师之后，就可以朝着架构师、团队负责人、CTO 等职位前进
历经更大的挑战。随着你的成长，各种影响力也会提高。

How
▶软件工程是很难的。这一行业在不断变化中，所以你必须紧跟它的步伐。你必须不断地投入时间和精力，因为你需要学习的东西总是比你能吸收的多。很多新
 手工程师甚至都不曾意识到他们如果想要攀登行业的高峰，要学习的东西、要付出的努力得有多少。不过，不用担心，下面我将指出一条“明路”有助于你成为一名 
 高级软件工程师。
 
 步骤0：选择你的道路，坚持下去！
做一件事，就要把它做好。——Doug McIlroy《Unix Philosophy》
▶关于这一点，我真的是强调得不能再强调了。选择好你将与之并肩作战的专业和技术堆栈非常重要。坚持不懈，不要分心。至于应该怎么做请看下面：
选择专业。也就是你想做的事情。例如：Web 开发、移动开发、DevOps 等。
选择专业中的实用技术。例如：如果你选择了 Web 开发，那你就需要在 Ruby on Rails、Python、Django，JavaScript 和 MEAN 等之间做斟酌。如果你选择的是移动开发，
则需要在 iOS 和 Android 等之间做出选择。
坚持下去，直到掌握这门技术。

▶我的意思并不是说除了你的主要专业以外，你就不必熟悉其他的了。那种首屈一指的软件工程师通常对其他的编程语言和技术都非常了解，当然首先他们对他 们自己的主要专
业了解得非常剔透。当你确定好主要专业之后，接下来要做的就是学习，阅读所有相关的书籍、练习各种必要的技能，这可能需要很多年的时间。但 是千万不要气馁，一步一个
脚印，一个一个攻克难关，量变才能达到质变。关于技术，我的推荐是：Ruby on Rails 之于 web 开发，iOS 之于移动开发。这是我是以一个过来人的身份告诉你的宝贵经验。
不过我还是想补充一句，可能每个人的口味不同，我的经验也许并不适合你，你完全可以选择其他 的技术，不过这样的话，你要阅读的书籍可能就和我的推荐不一样了。

步骤1：奠定基础
▶《The Pragmatic Programmer 》对于我们掌握软件是一个很好的起点。该书总结了高水平的实践探索。这与我们使用的是什么语言/技术无关。无论你选择的是哪种技术堆栈，
其主要原理都是一样的。

步骤2：掌握你的编程语言
▶你以后每天需要面对哪种编程语言取决于你今天选择的技术。但是编程语言总有主次之分。例如，Ruby on Rails 开发人员主要使用 Ruby，AngularJS 开发人员大多数时间用的是 
JavaScript。确定编程语言、掌握编程语言对你的职业生涯发展至关重要。因为以后你每天都会使用它！推荐你先阅读有关书籍。
《The Swift Programming Language》之于 Ruby 开发人员，以及《Programming Ruby 》之于 iOS 开发人员。

步骤3：学习框架
选一个，然后好好学习：
对于 Rails 开发人员——《Rails Tutorial 》by Michael Hartl
对于 iOS 开发人员——《iOS programming: The Big Nerd Ranch Guide》

步骤4：掌握文本编辑器/ IDE
▶再选一个，然后坚持不懈地掌握这个工具。如果你选择的是 VIM，那就要成为它的主人，让它往东就往东。

步骤5：使用版本控制系统
▶我建议使用 Git。下面是我喜欢的资源：Pro git——免费的在线电子书，详细讲解了 git 的各个方面。

步骤6：做好测试驱动开发
▶将 TDD 添加到你的技术堆栈中。养成每天 TDD 的习惯。高质量的代码源于良好的测试。
对于 Ruby on Rails 开发人员——《Rails Test Prescriptions》
对于 iOS 开发人员——《Test Driven iOS Development》

步骤7：将重构养成习惯
▶随着你不断添加更多的功能，代码库也会越来越复杂。为了保持代码库的可管理化，你需要重构。如果你不重构的话，你很快就会进入两难境地——即使是做 很小的改动都很困难、
bug 没法避免、没有人愿意处理这个凌乱的代码库。重构能让你的工作更加轻松。事不宜迟，赶快养成重构的习惯吧。下面这本好书能教你该怎么做： 《Refactoring: Improving 
the Design of Existing Code》by Martin Fowler

步骤8：学习软件架构
▶根据你上面选择的堆栈，再学习相关的架构。我推荐 Martin Fowler 写的《Patterns of Enterprise Application Architecture》一书。

步骤9：展示命令行的力量
▶刚开始接触命令行的第一感觉就是望而生畏。但是，一旦你学会如何使用，这将大大提高你执行一些基本任务的效率。而这本身就能让你成为一名更好的开发 人员，因为你能在
更短的时间里实现目标。然后你就能进入下一个水平。使用 shell 自动执行常见任务，建立自己的 dotfiles。如果你使用的 mac 或者 Linux 发行版，那么学会 shell。下面这
本书由 Mark Bates 所写的书挺不错:《Conquering the Command Line》

步骤 10：code code code！
▶只有不断地练习学到的知识，你才能真正掌握它。

总结
▶众所周知，成为一名高级软件工程师是非常难的。这需要大量的时间和精力。不同的人他们的学习速度也不尽相同，但是平均来说，大约需要 10 年时间才能成为一名可靠的高
级开发人员。你付出的各种投资最后必将给你带来巨大的回报。软件工程师的钱途很美好，其就业市场的需求一直居高不下，薪资水平 也根据经验程度在提高。这是一个快速增
长且相对较新的领域。软件工程师的每一天都在面临挑战：挑战改变人们的生活。来吧，各位软件工程师，首先挑战成为一 名高级软件工程师吧！

下面是导致我们走向平庸的真正原因。
1. 因为你 失败太少

	你拒绝尝试。

	你觉得什么都好难、好复杂，所以什么都“先放一放”，或者“明天再来做吧”。

	你甚至已经厌烦了现在的工作，但却又不去找新的工作；因为你觉得自己一定会“被拒绝”。

	你固守一隅，无所事事；而其他人正在挑战自我，忍受失败，并从中获得经验。

	我根据这个过程不断调整状态以确保自己一直走在上坡路上。就像一块钢铁，我在火中淬炼，被塑造成形。我把自己磨成一把有着利刃的剑，如果你没有相同的硬度，只能被现实劈成两段。

2. 因为你 太看重别人的想法

	你仿佛不得不顺应潮流。

	因为你相信，只有安全地选择和其他“特立独行”的人一样“独特”，这样的“与众不同”才是可以被接受的。

	你担忧周遭对你的眼光，害怕直面真实的自我。你老是评判别人，所以你以为别人也一定会对你评头论足。



	你逛街、买车、吃大餐、泡夜店。你的钱花在这些身外之物上，因为你要努力顺应这个世界。

	而别人的钱都用来投资自己，只有投资自己，才能让世界来顺应自己。

	不平庸，就要克服所有的不安全感，以真实的自我示人。纷繁的闲言碎语对他们从来没有丝毫干扰。他们追求卓越，而你正深陷世俗的泥潭。
		
3. 因为你 自以为很聪明

你做的都是别人做过的事情，学得都是别人学过的知识，读的也都是别人读过的文章。

你学习只是为了通过考试，而这让你自以为很聪明。



你认为学习是人们只在学校里面做的事情。

当你离开大学的时候，别人正继续在生活中学习。比起坐在教室里了解世界，他们更愿意走出去，在实践中获得知识。

你在大学课本上得到的信息远远少于我所知道的。

聪明不聪明并不取决于你学到了什么，而是你如何生活。

除了你那些光鲜的学位，别人在人生中经受过的磨砺，你没法坚持哪怕一秒。他们所经历的考验不会有正态分布或是百分制的成绩，只有一个唯一的标准——那就是生存！

4
因为你 从不阅读

只有被人明确要求时你才会阅读，不然你根本什么也不读。

你觉得历史或者哲学都是无聊又愚蠢的。

你宁愿窝在沙发上看“跑男”或者芒果台，也不会主动去发现一些新奇事物，不会把头埋下来读一本书，通过另一个人的大脑去更好地理解你身处的世界。



信息资源大大丰富的今天，任何你渴望了解的知识都能被搜索到。即使这样，你也不愿意从前人的沉淀里汲取力量。

即使知道自己应该看看这篇文章，你也不太可能静下心来好好看完。

你能把一匹马拉到水边，但你不一定就能让它喝水啊。

5
因为你 缺乏好奇心

你读的新闻都来自于那些互相剽窃的媒体。

我并不指望你能提出这样的质疑：“这一切是不是都只是一个谎言？”也不指望你会认可这样的可能性：其实所有的媒体都被命令去干扰民众的注意力。



你把时间都浪费在肥皂剧上，这时候别人却在学着剪视频、建网站、开发手机应用。

告别平庸，你需要的是渴望知识，任何领域的知识。

6
因为你 问题问得太少

你从不质疑权威。你也从不质疑自己。

你不明白在生活中适时提出问题、尊重不同意见的价值；你也不明白当面提出不同观点的巨大能量；你没有质疑现实的能力。你强加在自己身上的生存策略，把你束缚在千篇一律的人生轨迹中。



有的人，一张嘴就暴露了自己的无知。

在你还没能建构起自己的观点之前，别人就能不费吹灰之力击破你的观点，因为他们甚至会知道你会如何开始论证。

7
因为你 无法面对现实

你甚至不知道，自己有什么是不知道的。网上没有任何一篇文章能弥补你过去浪费的时间。

就算我告诉你明天一切改变都可能发生，你也不会有任何行动，除了等待。



平庸者就像一具行尸走肉，对身处的世界毫无知觉。

而只要你试着去尝一尝拥抱现实的滋味，哪怕一次也好，你就会快速地上瘾，沉浸在多彩的现实中无法自拔。

最终你会明白自己曾经对现实缺乏理解。你会幡然醒悟，让你在这个世界上变得平庸的唯一的原因，正是你自己。

别让你的生活止于平庸。


从穷人到百万富翁之间的七级台阶 你走了几级？
	1
节俭，富人花的比赚的少

有些人判别贫富只看人家是如何选择食物、饮料、服装、手表和汽车等等。在他们看来，有钱人选择消费品的品味也高。但是，购买奢侈品要比获得财富容易得多。把时间和精力
花在追求摆阔上，往往只能得到较差的经济成就。

可以用三个词勾画出富人的侧身像。是哪三个词呢？

“节俭节俭再节俭”

作者的调查中所包含的下面三个问题：

你的父母生活节俭吗？答案是肯定的。

你的生活节俭吗？答案是肯定的。

你的配偶生活节俭吗？答案是肯定的。

最后一个间题意义重大，如果跟爱浪费的人结婚，大多数人都不可能变为富翁，几乎没有人能够一边挥金如土一边构筑起财富大厦。

当然，只是节俭是不会让你变有钱的。



2
合理运用时间、精力和金钱，来创造财富

效率是财富积累最重要的因素之一。我们大多数人都想富裕，但是大多数人却没有拿出必需的时间、精力和金钱去实现目标。

富人每月用于计划其投资活动的时间比贫困者多一倍——富人平均每月花8.4小时打理自己的资产和投资，普通人每月只花4.6小时。你呢？

作者又问了富人们三个问题：

你会花很多之间为未来的经济状况做计划吗？答案是肯定的。

你有足够的时间来管理自己的投资吗？答案是肯定的。

当你分配时间做事的时候，管理资产总是优于其它活动吗？答案是肯定的。

同时，富人他们自己的生活福利担心的时间较少。与之相反，贫困者为生活问题发愁的时间多，但在采取行动改变现状方面所花的时间却很少。

富人把至少15%的收入用来投资。他们花钱的时候更注重消费给他们带来的价值。他们知道他们的钱花在哪里，并且会做记录。

另一方面，调査中95%的百万富翁都持有股票，大多数持有相当于其财富20%多的公开交易的股票。但是，他们大都不追随股票市场天天变化的涨落，大都不对金融传媒的每日
大标题作出反应而去进行股票交易。

3
比起富有的表象，更注重金钱上的自立

在还未富裕的人当中，大多认为百万富翁拥有名贵的服装、手表和其他表示社会地位的制品，但实际情祝并非如此。

大部分富人赚到钱的时候，他们不是把钱拿去花在奢侈品上，而是再投资，积累更多的财富。

许多人从来没有获得过金钱上的充分自立，高收入不等于金钱上充分自立，这需要有计划工作和自我牺牲。

作者的调查中还有这样四个问题，你这能够对这4个问题作出“肯定”的回答吗？

你的家庭经济是按照一个年度预算运行的吗？

你知道你们一家每年在衣食住行方面花多少钱吗？

你有没有一整套经过明确阐释的关于每天、每周、每月、每年和整个一生的目标体系？

你花很多时间去计划将来的财富吗？

很多普通人靠工作来支持自己的消费习惯，这人可能有很高的收入，但是他们把这些钱用来维持自己富有的表象——他们买奢侈品，买豪车，戴名表，住高级公寓。你身边
有没有这种“富有”的人？

那么，你是想有钱，还是想看起来有钱？



4
他们的父母不向他们提供经济资助

你是不是一向认为百万富翁都是含着银勺子降生的？

实际情况是，80%的富人都是富一代，也就是说他们的第一个一百万是靠自己赚来的。

你可以指望天上掉馅饼来赚一百万，也可以靠自己的努力赚一百万，你更希望哪一种情况？富人更加希望第二种。靠自己努力致富，能让他们更珍惜自己的劳动成果，并且经
历创造财富的过程，这样他们就能去赚第二个一百万、第三个一百万……

成为百万富翁的大多数人都对自己的才能有信心。他们从来不费神考虑父母是否富裕。他们从来不认为一个人定要生在富贵人家。相反，如果一个寻常境况的人相信，富二
代中才会出现百万富翁，那他就注定富不起来。

而且，一百多年前的情况就已是这样。斯坦利·莱伯戈特在《美国经济》杂志上，曾对1892年，关于美国4 047个百万富翁的一次研究进行评论。他说，84%“是暴发户，没有
借助于财产继承就爬上了顶层”。

5
他们的小孩成年后也经济独立

人们总以为富人的小孩从小就被宠坏，其实不一定都是这样的。曾经有一个孩子，在他13岁的时候，家里就给他买了间公寓，每天给他50美元的零花钱，给他买各种各样的玩具。可
惜他最后因为打架、偷窃而被开除了。


这个孩子的父母有很高的收入，但是他们不是富人，他们只是有富有的表象。真正的富人会培养他们的孩子成为经济独立的人，他们不会孩子想要什么就买什么，他们会从小教育
孩子节俭。



6
十分精确地瞄准市场机会

为什么你不富裕？可能是因为你没有寻找到市场中存在的机会。

富人总是在不停的寻找机会——做生意的机会，投资的机会等等。他们投资的时候会花时间与经历来研究，从而选择正确的投资方向，持续的增长自己的财富。

7
选择合适的职业

曾有一位国家新闻杂志社的记者问作者：“百万富翁从事什么职业？”

作者的回答是：“你不可能从一个人的职业来判断他将来能否成为百万富翁”，一个人不能肯定他所迈出的就是通向富裕的一步。

有些行业比其他行业容易获得较高利润，但是，这一发现不能简单的成为建议。

值得借鉴的是：富人知道自己想要什么，他们知道自己喜欢什么，知道自己的长处和短处，他们知道自己擅长什么。职业的选择可能是最重要的人生选择——普通人从一个
发薪日活到下一个发薪日，富人做自己擅长的事情，并且热爱自己的工作。——《邻家的百万富翁》

成功创业者必读的11本书
	
以下是这11本创业者必读书目：

1、《顾问式销售的艺术：富有创意的说服与呈现技巧》
作者：彼得-科伏特（PeterCoughter）

科伏特认为，大部分创意人员把大量时间都花在作品的创作上，几乎不会在说服与呈现上投入精力。作者在本书中用有趣、幽默的语言阐述了他为广告和营销人员设计的提高呈
现效果的工具，并列举了很多知名广告人讲述的关于最佳(或最糟糕)呈现的故事。读者将学会如何完善个人的呈现风格，如何组织强有力的呈现，如何利用简单之美，如何与听众
建立联系，如何有效地排练，最重要的是，如何取胜。

2、《精益创业：新创企业的成长思维》（TheLeanStartup）
作者：埃里克·莱斯(EricRies)

本书提供了不同于传统管理理论的、针对新创公司或大企业新创业务的科学管理模式，告诉创业者如何在充满不确定因素的环境中取胜。莱斯在书中展示了现代创新者如何迅速市场
变化、不断验证想法并专注于基本要素。他提倡企业进行“验证性学习”，先向市场推出简化版的原型产品，然后进行不断的试验和改进，以最低成本、最有效率的方式来验证产品是
否能引起消费者兴趣，从而达到灵活调整方向的目的。

3、MasteringtheVCGame（暂无中文版）
作者：杰弗里·巴斯冈(JeffreyBussgang)

创业者要想打造下一个Google、亚马逊、Facebook，如何打动风险投资者提供资金支持本身就是一项考验，但要挑选合适的投资者就更加困难了。杰弗里·巴斯冈不仅是一位优秀的创
业者，还是一位知名的投资者，他用自己的经验为创业者指明了一条成长大道：不仅要成为最佳投资人，还要测成为最佳合作伙伴。

4、《最危险的游戏》
作者：理查德-康奈尔（RichardConnell）

在康奈尔讲叙的短故事中，狩猎动物变成了狩猎人类，这也可以作为风险投资者的参考。对风险投资者来说，他们早已习惯被成千上万的创业公司包围，为这些创业公司设计
前景就是他们的工作之一。那么，我们为何不能更好地理解这种思维模式呢？

5、TheFoundersDilemmas（暂无中文版）
作者：诺姆·沃瑟曼（NoamWasserman）

当创业者遇到与好友共事、家人投资及其他棘手情况需要提供解决方案时，该如何处理？沃瑟曼的书为我们提供了答案。

6、PitchAnything（暂无中文版）
作者：OrenKlaff

Klaff曾经从风险投资者处募集了4亿美元资金，这本书主要介绍了如何用非传统方式进行融资。

7、VentureDeals:（暂无中文版）
作者：布拉德·费尔德（BradFeld）/贾森·门德尔松（JasonMendelson）

费尔德和门德尔松合著的这本书可以被看做是权威的投资指南，书中介绍了成功吸引投资并获得投资所需了解的各种细节。

8、《风险投资的游戏》
作者：威廉·H·德雷帕三世（WilliamH.Draper）

威廉·H·德雷帕三世是美国西海岸最早的风险投资家之一，在超过40年的时间里，他与顶尖企业家们在硅谷共同工作，在那里将今天的梦想化为明日的现实。本书首次近距
离审视了风险投资家与企业家之间的关系对于促进经济成功的重要性，讲述了一位曾经看到Skype、ApolloComputer、Hotmail、OpenTable及许多其他企业潜力的风险投资家
亲身经历的成功故事。

在书中，德雷帕探讨了风投家如何寻找合适的合伙人的评估方法，分享了雅虎、Zappos、百度、特斯拉汽车、动视、Measurex及其他企业的经验教训。同时，作者也结合自
己多年的风投经验，总结了风险投资家与企业家的合伙关系和行业规则，揭示了风险投资与创业世界的运作方式，是一本风险投资家不可不读的绝佳参考读物。

9、《全新销售:说服他人，从改变自己开始》
作者：丹尼尔·平克(DanielPink)

平克在书中以社会科学研究为基础，以时间探讨为主线，为重新审视销售提供了新的视角——35项著名实验，42个真实案例，其中大量来自作者长时间的追踪采访和研究。平克以详
细的剖析推翻了性格外向的人擅长销售等假设的正确性，用全新的视角来重新定义销售，他认为在全新销售新时代，所有优秀的销售人必须掌握打动他人的三大素质，即“ABC”新
三样：内外和谐、情绪浮力和头脑清晰；而要成为销售的艺术大师，还要精通打动他人的三大方法。本书以其深刻的行为洞察，回归人性的探讨，为全新销售提供了新的思路和工具。

10、《创意黏力学》
作者：奇普·希思（ChipHeath)/丹·希思(DanHeath)


这是个关于观念如何成功的故事。透过谣言、广告与伪概念有如病毒般席卷社会为实际案例，解析为何这类未经证实的概念能在短时间内迅速扩散、并传颂世代的原因；并指出若
是想法能被套牢，对企业或个人都是件重要的事。
作者进而提出简单、意外、具体、可信、情绪与故事等成功概念的六大原则，认为只要掌握这几项称之为“创意黏力学的主要元素，就可以让别人注意我们要传达的讯息，让对方
听懂并记住，相信或同意你的意见，发挥持久性的影响。有流畅的故事，更有清楚的说理，立论浅显有趣，说明性十足，论述性与实用性兼具。

11、《思考，快与慢》
作者：丹尼尔·卡尼曼(DanielKahneman)

在书中，卡尼曼会带领我们体验一次思维的终极之旅。他通过很多经典有趣的行为实验，指出我们在什么情况下可以相信自己的直觉，什么时候不能相信；指导我们如何在商场、
职场和个人生活中作出更好的选择，以及如何运用不同技巧来避免那些常常使我们陷入麻烦的思维失误。本书将会彻底改变你对思考的看法。	
	
25个Java机器学习工具&库

2015-12-28 CSDN
本列表总结了25个Java机器学习工具&库：

1. Weka集成了数据挖掘工作的机器学习算法。这些算法可以直接应用于一个数据集上或者你可以自己编写代码来调用。Weka包括一系列的工具，如数据预处理、分类、回归、聚类、关联规则以及可视化。

2.Massive Online Analysis（MOA）是一个面向数据流挖掘的流行开源框架，有着非常活跃的成长社区。它包括一系列的机器学习算法（分类、回归、聚类、异常检测、概念漂移检测和推荐系统）和评估工具。关联了WEKA项目，MOA也是用Java编写的，其扩展性更强。

3.MEKA项目提供了一个面向多标签学习和评价方法的开源实现。在多标签分类中，我们要预测每个输入实例的多个输出变量。这与“普通”情况下只涉及一个单一目标变量的情形不同。此外，MEKA基于WEKA的机器学习工具包。

4. Advanced Data mining And Machine learning System（ADAMS）是一种新型的柔性工作流引擎，旨在迅速建立并保持真实世界的复杂知识流，它是基于GPLv3发行的。

5. Environment for Developing KDD-Applications Supported by Index-Structure（ELKI）是一款基于Java的开源（AGPLv3）数据挖掘软件。ELKI主要集中于算法研究，重点研究聚类分析中的无监督方法和异常检测。

6. Mallet是一个基于Java的面向文本文件的机器学习工具包。Mallet支持分类算法，如最大熵、朴素贝叶斯和决策树分类。

7. Encog是一个先进的机器学习框架，集成了支持向量机（SVM）、人工神经网络、遗传算法、贝叶斯网络、隐马尔可夫模型（HMM）、遗传编程和遗传算法。

8. Datumbox机器学习框架是一个用Java编写的开源框架，允许快速地开发机器学习和统计应用。该框架的核心重点包括大量的机器学习算法以及统计测试，能够处理中等规模的数据集。

9. Deeplearning4j是使用Java和Scala编写的第一个商业级的、开源的、分布式深入学习库。其设计的目的是用于商业环境中，而不是作为一个研究工具。

10. Mahout是一个内置算法的机器学习框架。Mahout-Samsara帮助人们创建他们自己的数学，并提供了一些现成的算法实现。

11.Rapid Miner是德国多特蒙特技术大学开发的。它为开发者开发应用程序提供了一个GUI（图形用户界面）和Java API。它还提供了一些机器学习算法，用来做数据处理、可视化以及建模。

12. Apache SAMOA是一个机器学习（ML）框架，内嵌面向分布式流ML算法的编程抽象，并且允许在没有直接处理底层分布式流处理引擎（DSPEe，如Apache Storm、Apache S4和Apache samza）复杂性的情况下，开发新的ML算法。用户可以开发分布式流ML算法，而且可以在多个DSPEs上执行。

13. Neuroph通过提供支持创建、训练和保存神经网络的Java网络库和GUI工具，简化了神经网络开发。

14. Oryx 2是一个建立在Apache Spark和Apache Kafka的Lambda架构实现，但随着实时大规模机器学习而逐渐开始专业化。这是一个用于构建应用程序的框架，但也包括打包，以及面向协同过滤、分类、回归和聚类的端到端的应用程序。

15. Stanford Classifier是一个机器学习工具，它可以将数据项归置到一个类别。一个概率分类器，比如这个，它可以对一个数据项给出类分配的概率分布。该软件是最大熵分类器的一个Java实现。

16.io是一个Retina API，有着快速精确的类似大脑的自然语言处理算法。

17.JSAT是一个快速入门的机器学习库。该库是我在业余时间开发的，基于GPL3发行的。库中的一部分内容可自主学习，例如所有的代码都是独立的。JSAT没有外部依赖，而且是纯Java编写的。

18. N-Dimensional Arrays for Java(ND4J)是一个用于JVM的科学计算库。它们是用来在生产环境中使用的，这表明例程的设计是以最小的内存需求来运行的。

19. Java Machine Learning Library（Java机器学习库）是一系列机器学习算法的相关实现。这些算法，无论是源代码还是文档，都编写的很出色。其主要语言是Java。

20. Java-ML是一个使用Java编写的一系列机器学习算法的Java API。它只提供了一个标准的算法接口。

21. MLlib (Spark)是Apache Spark的可扩展机器学习库。虽然是Java，但该库与平台还支持Java，Scala和Python绑定。此库是最新的，并且算法很多。

22. H2O是用于智能应用的机器学习API。它在大数据上对统计学、机器学习和数学进行了规模化。H2O可扩展，开发者可以在核心部分使用简单的数学知识。

23. WalnutiQ是人脑部分面向对象模型，有着理论常用的学习算法（正在向简单强烈的情感人工智能模型方向研究）。

24. RankLib是一个排名学习算法库。目前已经实现八种流行的算法。

25. htm.java（基于Java的Hierarchical Temporal Memory算法实现）是一个面向智能计算的Numenta平台的Java接口。源码

原文地址：25 Java Machine Learning Tools & Libraries（译者/刘帝伟 审校/刘翔宇 责编/仲浩）

译者简介： 刘帝伟，中南大学软件学院在读研究生，关注机器学习、数据挖掘及生物信息领域。

	
	
	
	
	
	
	
	
	
	
	
	